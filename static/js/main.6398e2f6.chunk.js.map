{"version":3,"sources":["icons/icon-moon.svg","icons/icon-sun.svg","icons/icon-search.svg","icons/icon-location.svg","icons/icon-website.svg","icons/icon-twitter.svg","icons/icon-company.svg","Components/Header.tsx","Components/Searchbar.tsx","Components/ProfileHeader.tsx","Components/ReposAndFollows.tsx","Components/UserLinks.tsx","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Header","props","theme","toggleTheme","react_default","a","createElement","className","onClick","src","moonIcon","alt","sunIcon","Searchbar","setUserSearch","userMessage","setUserMessage","userSearch","requestUser","searchIcon","type","placeholder","onChange","e","target","value","concat","ProfileHeader","userAvatar","userLogin","userName","userJoined","ReposAndFollows","userRepos","userFollowers","userFollowing","UserLinks","userLocation","userBlog","userTwitter","userCompany","locationIcon","websiteIcon","href","twitterIcon","companyIcon","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ThemeContext","createContext","App","_useState","useState","_useState2","slicedToArray","setUserLogin","_useState3","_useState4","setUserJoined","_useState5","_useState6","setUserName","_useState7","_useState8","userBio","setUserBio","_useState9","_useState10","setUserRepos","_useState11","_useState12","setUserFollowers","_useState13","_useState14","setUserFollowing","_useState15","_useState16","setUserAvatar","_useState17","_useState18","setUserLocation","_useState19","_useState20","setUserBlog","_useState21","_useState22","setUserTwitter","_useState23","_useState24","setUserCompany","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setTheme","monthNames","changeDateFormat","date","dateFull","Date","day","getDate","month","getMonth","year","getFullYear","_ref","asyncToGenerator","_callee","username","response","data","_context","fetch","headers","Authorization","json","login","avatar_url","created_at","bio","public_repos","followers","following","location","blog","twitter_username","company","_x","apply","arguments","useEffect","curr","Provider","id","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.6398e2f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-moon.062faca2.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-sun.d8ea436b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-search.d4dcb162.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-location.b433e22d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-website.547abbf4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-twitter.4e1e65c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-company.64e9c16d.svg\";","import React from \"react\";\r\nimport moonIcon from \"../icons/icon-moon.svg\";\r\nimport sunIcon from \"../icons/icon-sun.svg\";\r\n\r\ninterface Props {\r\n  theme: string;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport default function Header(props: Props) {\r\n  const { theme, toggleTheme } = props;\r\n\r\n  return (\r\n    <div className=\"heading\">\r\n      <h2 className=\"devfinder\">devfinder</h2>\r\n      {theme === \"light\" ? (\r\n        <div className=\"mode\" onClick={toggleTheme}>\r\n          <span>DARK</span>\r\n          <img src={moonIcon} alt=\"moon icon\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"mode\" onClick={toggleTheme}>\r\n          <span>LIGHT</span>\r\n          <img src={sunIcon} alt=\"moon icon\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport searchIcon from \"../icons/icon-search.svg\";\r\n\r\ninterface Props {\r\n  setUserSearch: React.Dispatch<React.SetStateAction<string | null>>;\r\n  userMessage: string | null;\r\n  userSearch: string | null;\r\n  setUserMessage: React.Dispatch<React.SetStateAction<string | null>>;\r\n  requestUser: (username: string) => Promise<void>;\r\n}\r\n\r\nexport default function Searchbar(props: Props) {\r\n  const {\r\n    setUserSearch,\r\n    userMessage,\r\n    setUserMessage,\r\n    userSearch,\r\n    requestUser,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div className=\"search-field\">\r\n        <img src={searchIcon} alt=\"\" />\r\n        <input\r\n          className=\"input-field\"\r\n          type=\"text\"\r\n          placeholder=\"Search GitHub username…\"\r\n          onChange={(e) => {\r\n            setUserSearch(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      {userMessage ? <span className=\"noResults\">{userMessage}</span> : null}\r\n      <button\r\n        className=\"search-btn\"\r\n        onClick={() => {\r\n          requestUser(`${userSearch}`);\r\n          setUserMessage(null);\r\n        }}\r\n      >\r\n        Search\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { PropsWithChildren } from \"react\";\r\n\r\ninterface User {\r\n  login: string;\r\n  id: number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  events_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  site_admin: boolean;\r\n  name: string;\r\n  company: string;\r\n  blog: string;\r\n  location: string;\r\n  email: null | string;\r\n  hireable: null | string;\r\n  bio: null | string;\r\n  twitter_username: null | string;\r\n  public_repos: number;\r\n  public_gists: number;\r\n  followers: number;\r\n  following: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface Props {\r\n  userAvatar: User | null;\r\n  userLogin: User | null;\r\n  userName: User | null;\r\n  userJoined: string | User | null;\r\n}\r\n\r\nexport default function ProfileHeader(props: Props) {\r\n  const { userAvatar, userLogin, userName, userJoined } = props;\r\n\r\n  return (\r\n    <div className=\"profileHeader\">\r\n      <img src={`${userAvatar}`} alt=\"userAvatar\" className=\"userAvatar\" />\r\n      <div className=\"profileInfoWrapper\">\r\n        <div className=\"userAndUserName\">\r\n          {userLogin ? (\r\n            <h1>{`${userLogin}`}</h1>\r\n          ) : (\r\n            <h1 className=\"notAvailable\">Not Available</h1>\r\n          )}\r\n\r\n          <p className=\"userNameP\">@{`${userName}`}</p>\r\n        </div>\r\n        <p className=\"userJoinedDateP\">{`${userJoined}`}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\ninterface User {\r\n  login: string;\r\n  id: number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  events_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  site_admin: boolean;\r\n  name: string;\r\n  company: string;\r\n  blog: string;\r\n  location: string;\r\n  email: null | string;\r\n  hireable: null | string;\r\n  bio: null | string;\r\n  twitter_username: null | string;\r\n  public_repos: number;\r\n  public_gists: number;\r\n  followers: number;\r\n  following: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface Props {\r\n  userRepos: User | null;\r\n  userFollowers: User | null;\r\n  userFollowing: User | null;\r\n}\r\n\r\nexport default function ReposAndFollows(props: Props) {\r\n  const { userRepos, userFollowers, userFollowing } = props;\r\n\r\n  return (\r\n    <div className=\"reposAndFollow\">\r\n      <div className=\"repositori\">\r\n        <h3>Repos</h3>\r\n        <p>{`${userRepos}`}</p>\r\n      </div>\r\n      <div className=\"followers\">\r\n        <h3>Followers</h3>\r\n        <p>{`${userFollowers}`}</p>\r\n      </div>\r\n      <div className=\"following\">\r\n        <h3>Following</h3>\r\n        <p>{`${userFollowing}`}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport locationIcon from \"../icons/icon-location.svg\";\r\nimport websiteIcon from \"../icons/icon-website.svg\";\r\nimport twitterIcon from \"../icons/icon-twitter.svg\";\r\nimport companyIcon from \"../icons/icon-company.svg\";\r\n\r\ninterface User {\r\n  login: string;\r\n  id: number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  events_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  site_admin: boolean;\r\n  name: string;\r\n  company: string;\r\n  blog: string;\r\n  location: string;\r\n  email: null | string;\r\n  hireable: null | string;\r\n  bio: null | string;\r\n  twitter_username: null | string;\r\n  public_repos: number;\r\n  public_gists: number;\r\n  followers: number;\r\n  following: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface Props {\r\n  userLocation: User | null;\r\n  userBlog: User | null;\r\n  userTwitter: User | null;\r\n  userCompany: User | null;\r\n}\r\n\r\nexport default function UserLinks(props: Props) {\r\n  const { userLocation, userBlog, userTwitter, userCompany } = props;\r\n\r\n  return (\r\n    <div className=\"userLinks\">\r\n      <div className=\"userLinkLeftSide\">\r\n        <div className=\"userLinkDiv\">\r\n          <img src={locationIcon} alt=\"userLocation\" />\r\n          {userLocation ? (\r\n            <p className=\"userLinkName\">{`${userLocation}`}</p>\r\n          ) : (\r\n            <p className=\"userLinkNameNotAvailable\">Not Available</p>\r\n          )}\r\n        </div>\r\n        <div className=\"userLinkDiv\">\r\n          <img src={websiteIcon} alt=\"userWebsite\" />\r\n          {userBlog ? (\r\n            <p className=\"userLinkName\">\r\n              <a\r\n                href={`${userBlog}`}\r\n                className=\"actualLinks\"\r\n              >{`${userBlog}`}</a>\r\n            </p>\r\n          ) : (\r\n            <p className=\"userLinkNameNotAvailable\">Not Available</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"userLinkRightSide\">\r\n        <div className=\"userLinkDiv\">\r\n          <img src={twitterIcon} alt=\"userTwitter\" />\r\n          {userTwitter ? (\r\n            <p className=\"userLinkName\">\r\n              <a\r\n                href={`http://twitter.com/${userTwitter}`}\r\n                className=\"actualLinks\"\r\n              >{`${userTwitter}`}</a>\r\n            </p>\r\n          ) : (\r\n            <p className=\"userLinkNameNotAvailable\">Not Available</p>\r\n          )}\r\n        </div>\r\n        <div className=\"userLinkDiv\">\r\n          <img src={companyIcon} alt=\"userCompany\" />\r\n          {userCompany ? (\r\n            <p className=\"userLinkName\">{`${userCompany}`}</p>\r\n          ) : (\r\n            <p className=\"userLinkNameNotAvailable\">Not Available</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"./Components/Header\";\nimport { createContext } from \"react\";\nimport Searchbar from \"./Components/Searchbar\";\nimport ProfileHeader from \"./Components/ProfileHeader\";\nimport ReposAndFollows from \"./Components/ReposAndFollows\";\nimport UserLinks from \"./Components/UserLinks\";\n\nexport const ThemeContext = createContext<null | {}>(null);\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n  name: string;\n  company: string;\n  blog: string;\n  location: string;\n  email: null | string;\n  hireable: null | string;\n  bio: null | string;\n  twitter_username: null | string;\n  public_repos: number;\n  public_gists: number;\n  followers: number;\n  following: number;\n  created_at: string;\n  updated_at: string;\n}\n\nfunction App() {\n  const [userLogin, setUserLogin] = useState<User | null>(null);\n  const [userJoined, setUserJoined] = useState<User | null | string>(null);\n  const [userName, setUserName] = useState<User | null>(null);\n  const [userBio, setUserBio] = useState<User | null>(null);\n  const [userRepos, setUserRepos] = useState<User | null>(null);\n  const [userFollowers, setUserFollowers] = useState<User | null>(null);\n  const [userFollowing, setUserFollowing] = useState<User | null>(null);\n  const [userAvatar, setUserAvatar] = useState<User | null>(null);\n  const [userLocation, setUserLocation] = useState<User | null>(null);\n  const [userBlog, setUserBlog] = useState<User | null>(null);\n  const [userTwitter, setUserTwitter] = useState<User | null>(null);\n  const [userCompany, setUserCompany] = useState<User | null>(null);\n  const [userSearch, setUserSearch] = useState<null | string>(\"\");\n  const [userMessage, setUserMessage] = useState<null | string>(null);\n  const [theme, setTheme] = useState<string>(\"light\");\n\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  function changeDateFormat(date: string) {\n    const isoStr1 = date;\n    const dateFull = new Date(`${isoStr1}`);\n    const day = dateFull.getDate();\n    const month = monthNames[dateFull.getMonth()];\n    const year = dateFull.getFullYear();\n    const getFullYear = \"Joined \" + day + \" \" + month + \" \" + year;\n    setUserJoined(getFullYear);\n  }\n\n  const requestUser = async (username: string) => {\n    const response = await fetch(`https://api.github.com/users/${username}`, {\n      method: \"GET\",\n      headers: {\n        Authorization:\n          \"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\",\n      },\n    });\n    const data = await response.json();\n\n    if (data.login === undefined) {\n      setUserMessage(\"No results\");\n    } else {\n      setUserAvatar(data.avatar_url);\n      setUserLogin(data.name);\n      changeDateFormat(data.created_at);\n      setUserName(data.login);\n      setUserBio(data.bio);\n      setUserRepos(data.public_repos);\n      setUserFollowers(data.followers);\n      setUserFollowing(data.following);\n      setUserLocation(data.location);\n      setUserBlog(data.blog);\n      setUserTwitter(data.twitter_username);\n      setUserCompany(data.company);\n    }\n  };\n\n  useEffect(() => {\n    requestUser(\"octocat\");\n  }, []);\n\n  const toggleTheme = () => {\n    setTheme((curr) => (curr === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <div className=\"main\" id={theme}>\n        <Header theme={theme} toggleTheme={toggleTheme} />\n        <Searchbar\n          setUserSearch={setUserSearch}\n          requestUser={requestUser}\n          setUserMessage={setUserMessage}\n          userSearch={userSearch}\n          userMessage={userMessage}\n        />\n        <div className=\"searchResult\">\n          <div className=\"wholeResult\">\n            <ProfileHeader\n              userAvatar={userAvatar}\n              userLogin={userLogin}\n              userName={userName}\n              userJoined={userJoined}\n            />\n            <div className=\"userBio\">\n              {userBio ? (\n                <p className=\"userBioYes\">{`${userBio}`}</p>\n              ) : (\n                <p className=\"userBioNo\">This profile has no bio</p>\n              )}\n            </div>\n            <div className=\"left\">\n              <ReposAndFollows\n                userRepos={userRepos}\n                userFollowers={userFollowers}\n                userFollowing={userFollowing}\n              />\n              <UserLinks\n                userLocation={userLocation}\n                userBlog={userBlog}\n                userTwitter={userTwitter}\n                userCompany={userCompany}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}